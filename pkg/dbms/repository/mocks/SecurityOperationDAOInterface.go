// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	"github.com/softplan/tenkai-docker-api/pkg/dbms/model"
	mock "github.com/stretchr/testify/mock"
)

// SecurityOperationDAOInterface is an autogenerated mock type for the SecurityOperationDAOInterface type
type SecurityOperationDAOInterface struct {
	mock.Mock
}

// CreateOrUpdate provides a mock function with given fields: so
func (_m *SecurityOperationDAOInterface) CreateOrUpdate(so model.SecurityOperation) error {
	ret := _m.Called(so)

	var r0 error
	if rf, ok := ret.Get(0).(func(model.SecurityOperation) error); ok {
		r0 = rf(so)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Delete provides a mock function with given fields: id
func (_m *SecurityOperationDAOInterface) Delete(id int) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// List provides a mock function with given fields:
func (_m *SecurityOperationDAOInterface) List() ([]model.SecurityOperation, error) {
	ret := _m.Called()

	var r0 []model.SecurityOperation
	if rf, ok := ret.Get(0).(func() []model.SecurityOperation); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.SecurityOperation)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
